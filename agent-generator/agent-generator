#!/usr/bin/env ruby
TEMPLATES_DIR = File.dirname(__FILE__)

if ARGV.size != 2 || !["file","script"].include?(ARGV[0])
  puts "Usage agent-generator <type> <file_path>
  * type could be file or script
  * file_path is path to config file or script"
  exit 1
end

require "erb"

type = ARGV[0].to_sym
file_name = ARGV[1]
identifier = file_name.gsub(/[-\.\/]/,"_").gsub(/^_/,"").downcase

`mkdir -p bin/script_services bin/file_services dbus-policies dbus-services polkit-definitions services/system_agents clients/system_agent` #create dir structure

agent_class = identifier.to_s.gsub(/\/(.?)/) { "::#{$1.upcase}" }.gsub(/(?:^|_)(.)/) { $1.upcase } #rails code of camelize
agent_class_file = identifier
service_script_name = agent_class_file+"_service.rb"

generated_files = {
  "bin_service.erb" => File.join("bin",type.to_s+"_services",service_script_name),
  "dbus_policy.erb" => File.join("dbus-policies","org.opensuse.systemagents.#{type}.#{identifier}.conf"),
  "dbus_service.erb" => File.join("dbus-services","org.opensuse.systemagents.#{type}.#{identifier}.service"),
  "polkit_policy.erb" => File.join("polkit-definitions","org.opensuse.systemagents.#{type}.#{identifier}.policy"),
  "system_agent_service.erb" => File.join("services","system_agents",agent_class_file+".rb"),
  "system_agent_client.erb" => File.join("clients","system_agent",agent_class_file+".rb"),
  "Rakefile.erb" => "Rakefile"
}

generated_files.each do |template,result_path|
  template = File.read File.join(TEMPLATES_DIR,template)
  result = ERB.new(template,0,"").result(binding)
  File.open(result_path,"w") {|f| f.write result }
end
