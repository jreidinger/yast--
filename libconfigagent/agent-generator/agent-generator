#!/usr/bin/env ruby
=begin
This file is part of LibConfigAgent.

LibConfigAgent is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
version 2.1 of the License.

LibConfigAgent is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with LibConfigAgent.  If not, see <http://www.gnu.org/licenses/>.
=end
TEMPLATES_DIR = File.dirname(__FILE__)

if ARGV.size < 2 || (!["file","script"].include?(ARGV[0]) && !["file","script"].include?(ARGV[1]))
  puts "Usage agent-generator [-f] <type> <file_path>
  * -f overwrite existing files
  * type could be file or script
  * file_path is path to config file or script"
  exit 1
end

require "erb"

index = 0
force = false
if ARGV[index] == "-f"
  force = true
  index += 1
end
type = ARGV[index].to_sym
file_name = ARGV[index+1]
identifier = file_name.gsub(/[-\.\/]/,"_").gsub(/^_/,"").downcase

`mkdir -p infrastructure/bin/script_services infrastructure/bin/file_services infrastructure/dbus-policies infrastructure/dbus-services infrastructure/polkit-definitions services/config_agent infrastructure/clients/config_agent test` #create dir structure

agent_class_file = file_name.gsub(/^.*\//,"").gsub(/[-\.]/,"_").downcase
agent_class = agent_class_file.to_s.gsub(/\/(.?)/) { "::#{$1.upcase}" }.gsub(/(?:^|_)(.)/) { $1.upcase } #rails code of camelize
service_script_name = agent_class_file+"_service.rb"

generated_files = {
  "bin_service.erb" => File.join("infrastructure","bin",type.to_s+"_services",service_script_name),
  "dbus_policy.erb" => File.join("infrastructure","dbus-policies","org.opensuse.config_agent.#{type}.#{identifier}.conf"),
  "dbus_service.erb" => File.join("infrastructure","dbus-services","org.opensuse.config_agent.#{type}.#{identifier}.service"),
  "polkit_policy.erb" => File.join("infrastructure","polkit-definitions","org.opensuse.config_agent.#{type}.#{identifier}.policy"),
  "config_agent_service.erb" => File.join("services","config_agent",agent_class_file+".rb"),
  "config_agent_client.erb" => File.join("infrastructure","clients","config_agent",agent_class_file+".rb"),
  "agent_test.erb" => File.join("test","test_#{agent_class_file}.rb"),
  "Rakefile.erb" => "Rakefile"
}

generated_files.each do |template,result_path|
  if File.exists?(result_path) && !force
    puts "File #{result_path} exists. Skipping..."
    next
  end
  template = File.read File.join(TEMPLATES_DIR,template)
  result = ERB.new(template,0,"").result(binding)
  File.open(result_path,"w") {|f| f.write result }
end
